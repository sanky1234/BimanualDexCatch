# used to create the object
name: BimanualDexCatchSpotCEM

physics_engine: ${..physics_engine}

input_control_names: ["robot1/joint1", "robot1/joint2", "robot1/joint3", "robot1/joint4", "robot1/joint5", "robot1/joint6", "robot1/joint7",
                      # "robot1/index_q1", "robot1/middle_q1", "robot1/ring_q1", "robot1/pinky_q1", "robot1/thumb_q1", "robot1/thumb_q2",
                      "robot2/joint1", "robot2/joint2", "robot2/joint3", "robot2/joint4", "robot2/joint5", "robot2/joint6", "robot2/joint7"
                      # , "robot2/index_q1", "robot2/middle_q1", "robot2/ring_q1", "robot2/pinky_q1", "robot2/thumb_q1", "robot2/thumb_q2",
                      ]


# if given, will override the device setting in gym. 
env:
  numEnvs: ${resolve_default:8192,${...num_envs}}
  envSpacing: 1.5
  episodeLength: 150
  enableDebugVis: False

  numActions: 0
  aggregateMode: 3
 
  # reward scales
  success_reward_scale: 5.0
  catch_reward_scale: 1.0
  catch_dist_reward_scale: 1.0
  contact_reward_scale: 1.0
  collision_reward_scale: 1.0
  manipulability_reward_scale: 1.0
  gravity: -30.0

  stability_time: 0.5
  # Is this option even needed?
  asset:
    assetRoot: "../../assets"
    assetFileNameLeftAllegroUR3: "urdf/spot_description/spot_7dof_psyonic_no_base.urdf"
   
  # set to True if you use camera sensors in the environment
  enableCameraSensors: False

sim:
  dt: 0.01667 # 1/60
  substeps: 2
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
  gravity: [0.0, 0.0, -9.81]
  physx:
    num_threads: ${....num_threads}
    solver_type: ${....solver_type}
    use_gpu: ${contains:"cuda",${....sim_device}} # set to False to run on CPU
    num_position_iterations: 8
    num_velocity_iterations: 1
    contact_offset: 0.005
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 1000.0
    default_buffer_size_multiplier: 5.0
    max_gpu_contact_pairs: 4194304 # 1024*1024 --> 2048*2048
    num_subscenes: ${....num_subscenes}
    contact_collection: 2 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (broken - do not use!)

task:
  randomize: False
